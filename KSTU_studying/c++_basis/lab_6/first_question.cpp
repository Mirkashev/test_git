#include <iostream>
#include <vector>

/*Не знаю как erase повлияет на работу программы в случае, если компиляция производится в viusal studio. В компиляторе g++ после удаления элемента, на который указывает итератор, итератор просто производит смещение и указывает на следующий элемент*/
 
int main()
{
	std::vector<int> v { 1, 2, 3, 4, 5, 6, 7 };
 
	auto it { v.begin() };
 
	++it; // двигаемся ко второму элементу
	std::cout << *it << '\n'; // ок: выводится "2"
 
	v.erase(it); // удаляем элемент, на который в данный момент указывает итератор
 
	// erase() инвалидирует итераторы для стираемого элемента (и последующих элементов тоже),
	// поэтому теперь итератор "it" является недействительным
	
	++it; // неопределенное поведение
	std::cout << *it << '\n'; // неопределенное поведение (указываем на 4 в g++)
	   
	return 0;
}
