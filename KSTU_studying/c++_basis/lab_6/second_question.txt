Плюсы передачи по ссылке:
    Ссылки позволяют функции изменять значение аргумента, что иногда полезно. В противном случае, для гарантии того, что функция не изменит значение аргумента, нужно использовать константные ссылки.
    Поскольку при передаче по ссылке копирования аргументов не происходит, то этот способ гораздо эффективнее и быстрее передачи по значению, особенно при работе с большими структурами или классами.
    Ссылки могут использоваться для возврата сразу нескольких значений из функции (через параметры вывода).
Минусы передачи по ссылке:
    Трудно определить, является ли параметр, переданный по неконстантной ссылке, параметром ввода, вывода или того и другого одновременно. Разумное использование const и суффикса Out для внешних переменных решает эту проблему.
    По вызову функции невозможно определить, будет аргумент изменен функцией или нет. Аргумент, переданный по значению или по ссылке, выглядит одинаково. Мы можем определить способ передачи аргумента только просмотрев объявление функции. Это может привести к ситуации, когда программист не сразу поймет, что функция изменяет значение аргумента.
Когда использовать передачу по ссылке:
    при передаче структур или классов (используйте const, если нужно только для чтения);
    когда нужно, чтобы функция изменяла значение аргумента.
Когда не использовать передачу по ссылке:
    при передаче фундаментальных типов данных (используйте передачу по значению);
    при передаче обычных массивов (используйте передачу по адресу).

Передача по адресу:
    Передача аргументов по адресу — это передача адреса переменной-аргумента (а не исходной переменной). Поскольку аргумент является адресом, то параметром функции должен быть указатель. Затем функция сможет разыменовать этот указатель для доступа или изменения исходного значения.
    Передачу по адресу обычно используют с указателями на обычные массивы.

Плюсы и минусы передачи по адресу
Плюсы передачи по адресу:
   Передача по адресу позволяет функции изменить значение аргумента, что иногда полезно. В противном случае, используем const для гарантии того, что функция не изменит аргумент.
   Поскольку копирования аргументов не происходит, то скорость передачи по адресу достаточно высокая, даже если передавать большие структуры или классы.
   Мы можем вернуть сразу несколько значений из функции, используя параметры вывода.
Минусы передачи по адресу:
   Все указатели нужно проверять, не являются ли они нулевыми. Попытка разыменовать нулевой указатель приведет к сбою в программе.
   Поскольку разыменование указателя выполняется медленнее, чем доступ к значению напрямую, то доступ к аргументам, переданным по адресу, выполняется также медленнее, чем доступ к аргументам, переданным по значению.
Когда использовать передачу по адресу:
   при передаче обычных массивов (если нет никаких проблем с тем, что массивы распадаются в указатели при передаче).
Когда не использовать передачу по адресу:
   при передаче структур или классов (используйте передачу по ссылке);
   при передаче фундаментальных типов данных (используйте передачу по значению).
Как вы можете видеть сами, передача по адресу и по ссылке имеют почти одинаковые преимущества и недостатки. Поскольку передача по ссылке обычно безопаснее, чем передача по адресу, то в большинстве случаев предпочтительнее использовать передачу по ссылке.
Правило: Используйте передачу по ссылке, вместо передачи по адресу, когда это возможно.

Возврат по значению:
    Возврат по значению — это самый простой и безопасный тип возврата. При возврате по значению, копия возвращаемого значения передается обратно в caller. 
    Еще одним преимуществом является то, что вы можете возвращать переменные (или выражения), в вычислении которых задействованы и локальные переменные, объявленные в теле самой функции. При этом, можно не беспокоиться о проблемах, которые могут возникнуть с областью видимости. Поскольку переменные вычисляются до того, как функция производит возврат значения, то здесь не должно быть никаких проблем с областью видимости этих переменных, когда заканчивается блок, в котором они объявлены
Когда использовать возврат по значению:
   при возврате переменных, которые были объявлены внутри функции;
   при возврате аргументов функции, которые были переданы в функцию по значению.
Когда не использовать возврат по значению:
   при возврате стандартных массивов или указателей (используйте возврат по адресу);
   при возврате больших структур или классов (используйте возврат по ссылке).

Вовзрат по адресу:
    Возврат по адресу — это возврат адреса переменной обратно в caller. Подобно передаче по адресу, возврат по адресу может возвращать только адрес переменной. Литералы и выражения возвращать нельзя, так как они не имеют адресов. Поскольку при возврате по адресу просто копируется адрес из функции в caller, то этот процесс также очень быстрый.
    Тем не менее, этот способ имеет один недостаток, который отсутствует при возврате по значению: если вы попытаетесь возвратить адрес локальной переменной, то получите неожиданные результаты(получите висячий указатель(адрес освобождённой памяти), ибо переменная уничтожается в конце подпрограммы). 
Когда использовать возврат по адресу:
   при возврате динамически выделенной памяти;
   при возврате аргументов функции, которые были переданы по адресу.
Когда не использовать возврат по адресу:
   при возврате переменных, которые были объявлены внутри функции (используйте возврат по значению);
   при возврате большой структуры или класса, который был передан по ссылке (используйте возврат по ссылке).

Возврат по ссылке:
    Подобно передаче по ссылке, значения, возвращаемые по ссылке, должны быть переменными (вы не сможете вернуть ссылку на литерал или выражение). При возврате по ссылке в caller возвращается ссылка на переменную. Затем caller может её использовать для продолжения изменения переменной, что может быть иногда полезно. Этот способ также очень быстрый и при возврате больших структур или классов.
    Однако, как и при возврате по адресу, вы не должны возвращать локальные переменные по ссылке.  В программе, приведенной выше, возвращается ссылка на переменную value, которая уничтожится, когда функция завершит свое выполнение. Это означает, что caller получит ссылку на мусор. К счастью, ваш компилятор, вероятнее всего, выдаст предупреждение или ошибку, если вы попытаетесь это сделать. Возврат по ссылке обычно используется для возврата аргументов, переданных в функцию по ссылке. В следующем примере мы возвращаем (по ссылке) элемент массива, который был передан в функцию по ссылке
Когда использовать возврат по ссылке:
   при возврате ссылки-параметра;
   при возврате элемента массива, который был передан в функцию;
   при возврате большой структуры или класса, который не уничтожается в конце функции (например, тот, который был передан в функцию).
Когда не использовать возврат по ссылке:
   при возврате переменных, которые были объявлены внутри функции (используйте возврат по значению);
   при возврате стандартного массива или значения указателя (используйте возврат по адресу).

Перегрузка функций — это возможность определять несколько функций с одним и тем же именем, но с разными параметрами.